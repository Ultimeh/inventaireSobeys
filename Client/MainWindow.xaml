<Window x:Name="mainWindow" x:Class="Client.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Client"
        mc:Ignorable="d"  
        Title="Inventaire Entrepôt" Height="700" Width="1336" IsEnabled="{Binding enableMain}" HorizontalAlignment="Left" VerticalAlignment="Top" MinWidth="1100" MinHeight="600" WindowStyle="None" BorderThickness="1.45" BorderBrush="DimGray" WindowStartupLocation="CenterScreen" ResizeMode="CanResize" MouseLeftButtonDown="mainWindow_MouseLeftButtonDown" Closing="mainWindow_Closing">

    <Window.Style>
        <Style TargetType="{x:Type Window}">
            <Setter Property="Background" Value="#FFEEEEEE"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                    <Setter Property="Background" Value="#FF292929"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Style>

    <Grid>
        <Label Margin="190,0,108,0" Height="30" VerticalAlignment="Top" MouseDoubleClick="Label_MouseDoubleClick" />

        <DockPanel Width="auto" Height="20" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="6,6,0,0" >
            <Menu x:Name="topMenu" DockPanel.Dock="Top" Height="20" VerticalAlignment="Top" Margin="0,0,-10,0" HorizontalAlignment="Left" Width="auto"  Background="Transparent">
                <Menu.Style>
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                <Setter Property="ItemsControl.Foreground" Value="LightGray"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Menu.Style>

                <MenuItem Header="{Binding UserName}"  VerticalAlignment="Top" Height="20" HorizontalAlignment="Center">
                    <MenuItem Header="{Binding menuLogOut}" Click="btnDisconnect_Click" Foreground="Black" />
                    <Separator Margin="10"/>
                    <MenuItem Header="_Quitter" Click="btnX_Click" Foreground="Black" />
                </MenuItem>
                <MenuItem Header="_Options" Height="20">
                    <MenuItem Header="_Activer Dark Theme" IsCheckable="True" IsChecked="{Binding settings.DarkMode}" Foreground="Black"/>
                    <Separator/>
                    <MenuItem Header="_Administration ..." Visibility="{Binding admin}" Foreground="Black" Click="MenuItem_Click"/>
                    <Separator Visibility="{Binding admin}"/>
                    <MenuItem Header="_Changer de mot de passe ..." Click="changePassword_Click" Foreground="Black"/>
                    <Separator Visibility="{Binding rapport}"/>
                    <MenuItem x:Name="ctx_Rapport" Header="_Sauvegarder Rapport Excel ..." Visibility="{Binding rapport}" Foreground="Black" Click="ctx_Rapport_Click"/>
                </MenuItem>
                <MenuItem Header="_Logs" Click="Logs_Window" Visibility="{Binding admin}"/>
                <MenuItem Header="_Aide" Click="ctx_Aide"/>
                <MenuItem Header="_À propos" Click="About_Window"/>
            </Menu>
            <TextBox AcceptsReturn="True" Margin="0,0,0,1000" HorizontalAlignment="Left" VerticalAlignment="Top" />
        </DockPanel>

        <Button x:Name="bntX" Content="X" Margin="0,8,8,0" VerticalAlignment="Top" BorderBrush="{x:Null}"  Width="25" Height="25" Click="btnX_Click" HorizontalAlignment="Right">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#FFC74040"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" CornerRadius="15">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FFBF5555"/>
                            <Setter Property="Foreground" Value="LightGray"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#FFE28C8C"/>
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="minimize" Content="_" Margin="0,8,78,0" VerticalAlignment="Top" BorderBrush="{x:Null}"  Width="25" Height="25" Click="minimize_Click" HorizontalAlignment="Right" RenderTransformOrigin="0.5,0.5" >
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="DarkGray"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" CornerRadius="15">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="LightGray"/>
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#FFD6D6D6"/>
                            <Setter Property="Foreground" Value="DarkGray"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="maximize" Content="☐" Margin="0,8,43,0" VerticalAlignment="Top" BorderBrush="{x:Null}"  Width="25" Height="25" Click="maximize_Click" HorizontalAlignment="Right">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="DarkGray"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" CornerRadius="15">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="LightGray"/>
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#FFD6D6D6"/>
                            <Setter Property="Foreground" Value="DarkGray"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>


        <TabControl x:Name="tabControl" Margin="0,38,0,0" BorderThickness="0,1,0,0" BorderBrush="DimGray" SelectedIndex="-1" Loaded="tabControl_Loaded" SelectionChanged="tabControl_SelectionChanged">

            <TabControl.Style>
                <Style>
                    <Setter Property="ItemsControl.Background" Value="#FFC5C5C5"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                            <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                            <Setter Property="ItemsControl.Background" Value="#FF343434"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TabControl.Style>



            <TabControl.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="10,10,10,10"/>
                </Style>



                <Style TargetType="{x:Type TabItem}">

                    <Setter Property="Template">
                        <Setter.Value>

                            <ControlTemplate TargetType="{x:Type TabItem}">

                                <Grid x:Name="Panel">
                                    <Border x:Name="Border" Background="#FFC5C5C5" BorderBrush="DimGray" BorderThickness="1,1,1,0" >
                                        <ContentPresenter VerticalAlignment="Center" Margin="5" HorizontalAlignment="Center" ContentSource="Header" >
                                        </ContentPresenter>
                                    </Border>
                                </Grid>

                                <ControlTemplate.Triggers>

                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding settings.DarkMode}" Value="true"/>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="true"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Foreground" Value="LightGray"/>
                                        <Setter TargetName="Border" Property="Background" Value="#FF343434"/>
                                    </MultiDataTrigger>


                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding settings.DarkMode}" Value="true"/>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="false"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Foreground" Value="LightGray"/>
                                        <Setter TargetName="Border" Property="Background" Value="#FF292929"/>
                                    </MultiDataTrigger>

                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding settings.DarkMode}" Value="false"/>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="true"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Setter TargetName="Border" Property="Background" Value="#FFC5C5C5"/>
                                    </MultiDataTrigger>

                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding settings.DarkMode}" Value="false"/>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="false"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Setter TargetName="Border" Property="Background" Value="#FFEEEEEE"/>
                                    </MultiDataTrigger>

                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>


                </Style>

            </TabControl.Resources>


            <TabItem x:Name="tabEnt" FontSize="12" Width="125" Margin="8,1,-8,-1" Visibility="{Binding visEnt}">

                <TabItem.Header>
                    <Grid >
                        <TextBlock TextAlignment="Center" Text="Entrepot" FontFamily="Arial" FontSize="12" Height="18" Width="80" Margin="0,2,0,-2" />
                    </Grid>
                </TabItem.Header>

                <Grid>

                    <ListView x:Name="ListViewData" GridViewColumnHeader.Click="GridViewColumnHeader_Click" VirtualizingPanel.VirtualizationMode="Recycling" VirtualizingPanel.ScrollUnit="Pixel" ItemsSource="{Binding invPostesView}" Margin="10,10,10,182" SelectionMode="Extended" MouseLeftButtonDown="ListViewData_MouseLeftButtonDown" KeyUp="ListViewData_KeyUp" >

                        <ListView.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="ItemsControl.Background" Value="#FFECECEC"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.Style>

                        <ListView.Resources>
                            <ContextMenu x:Key="ItemContextMenu">
                                <MenuItem x:Name="copyAll" Header="Copier ligne(s) au complet" FontSize="12" Foreground="Black" Click="copyAll_Click" />
                                <MenuItem x:Name="copyRF" Header="Copier RF(s) de Sortie" FontSize="12" Foreground="Black" Click="copyRF_Click"/>
                                <MenuItem x:Name="copyRFretour" Header="Copier RF(s) de Retour" FontSize="12" Foreground="Black" Click="copyRFretour_Click"/>
                                <MenuItem x:Name="copySN" Header="Copier numéro(s) de série" FontSize="12" Foreground="Black" Click="copySN_Click"/>
                                <Separator Margin="0,0,0,0" Visibility="{Binding Path=DataContext.admin, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"/>
                                <MenuItem x:Name="modify" Margin="0,5,0,5" Header="Modifier sélection(s)" FontSize="12" Foreground="Black" Visibility="{Binding Path=DataContext.admin, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" Click="modify_Click" />
                                <Separator Margin="0,0,0,0" Visibility="{Binding Path=DataContext.admin, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"/>
                                <MenuItem x:Name="delete" Margin="0,5,0,0" Header="Surprimer sélection(s)" FontSize="12" Foreground="Black" Visibility="{Binding Path=DataContext.admin, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" Click="delete_Click"/>
                            </ContextMenu>

                            <Style TargetType="{x:Type GridViewColumnHeader}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                                            <Border BorderThickness="0,0,0,1" BorderBrush="LightGray" Background="LightSteelBlue">
                                                <TextBlock x:Name="ContentHeader" Text="{TemplateBinding Content}" Padding="5,5,5,0" Width="{TemplateBinding Width}" TextAlignment="Center" />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                <Setter Property="Foreground" Value="Black" />
                                <Setter Property="FontFamily" Value="Segoe UI" />
                                <Setter Property="FontSize" Value="12" />
                            </Style>

                        </ListView.Resources>

                        <ListView.View>
                            <GridView x:Name="dataGridViewReg" AllowsColumnReorder="False">

                                <GridViewColumn Header=" Type" DisplayMemberBinding="{Binding type}">
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Modèle" DisplayMemberBinding="{Binding model}">
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" # Actif" DisplayMemberBinding="{Binding asset}">
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Numéro de série" DisplayMemberBinding="{Binding serial}">
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Statut" DisplayMemberBinding="{Binding statut}">
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" RF de Sortie" DisplayMemberBinding="{Binding RF}">
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Date de Sortie" DisplayMemberBinding="{Binding dateSortie}" >
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" RF de Retour" DisplayMemberBinding="{Binding RFretour}">
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Date de Retour" DisplayMemberBinding="{Binding dateRetour}" >
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Emplacement" DisplayMemberBinding="{Binding emplacement}">
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Date d'ajout" DisplayMemberBinding="{Binding dateEntry}">
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Date d'envoie au Lab" DisplayMemberBinding="{Binding dateEntryLab}">
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Date Clonage" DisplayMemberBinding="{Binding dateClone}" >
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Expiration Clonage" DisplayMemberBinding="{Binding dateCloneValid}" >
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                            </GridView>
                        </ListView.View>

                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Style.Setters>
                                    <Setter Property="Foreground" Value="black"/>
                                    <Setter Property="FontWeight" Value="Normal"/>
                                    <Setter Property="FontSize" Value="12"/>
                                    <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}"/>
                                    <EventSetter Event="MouseDoubleClick" Handler="ListBoxItem_MouseDoubleClick"/>
                                </Style.Setters>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding xcolor}" Value="1">
                                        <Setter Property="Foreground" Value="DarkOrange"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding xcolor}" Value="2">
                                        <Setter Property="Foreground" Value="Red"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.ItemContainerStyle>

                    </ListView>

                    <Button x:Name="btn_Ajout" Content="Ajout de nouveaux équipement a l'inventaire" Margin="0,0,286,111" IsEnabled="{Binding enableEntrepot}" Click="btn_Ajout_Click" HorizontalAlignment="Right" Width="259" Height="28" VerticalAlignment="Bottom">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}" CornerRadius="14">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="LightBlue"/>
                                        <Setter Property="Foreground" Value="black"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="LightSkyBlue"/>
                                        <Setter Property="Foreground" Value="black"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="DarkGray"/>
                                        <Setter Property="Foreground" Value="LightGray"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <Button x:Name="btn_Sortie" Content="Sortie d'équipement" HorizontalAlignment="Right" Margin="0,0,10,73" IsEnabled="{Binding enableEntrepot}" VerticalAlignment="Bottom" Width="259" Height="28" Click="btn_Sortie_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}" CornerRadius="14">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="LightBlue"/>
                                        <Setter Property="Foreground" Value="black"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="LightSkyBlue"/>
                                        <Setter Property="Foreground" Value="black"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="DarkGray"/>
                                        <Setter Property="Foreground" Value="LightGray"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <Button x:Name="btn_emplacement" Content="Changement d'emplacement" HorizontalAlignment="Right" Margin="0,0,286,73" IsEnabled="{Binding enableEntrepot}" Width="259" Click="btn_emplacement_Click" Height="28" VerticalAlignment="Bottom">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}" CornerRadius="14">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="LightBlue"/>
                                        <Setter Property="Foreground" Value="black"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="LightSkyBlue"/>
                                        <Setter Property="Foreground" Value="black"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="DarkGray"/>
                                        <Setter Property="Foreground" Value="LightGray"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <Button x:Name="btn_Retour" Content="Retour d'équipement" HorizontalAlignment="Right" Margin="0,0,287,35" IsEnabled="{Binding enableEntrepot}" Width="259" Click="btn_Retour_Click" Height="28" VerticalAlignment="Bottom">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}" CornerRadius="14">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="LightBlue"/>
                                        <Setter Property="Foreground" Value="black"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="LightSkyBlue"/>
                                        <Setter Property="Foreground" Value="black"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="DarkGray"/>
                                        <Setter Property="Foreground" Value="LightGray"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <Button x:Name="btn_way" Content="Waybills" HorizontalAlignment="Right" Margin="0,0,10,35" IsEnabled="True" Width="259" Height="28" VerticalAlignment="Bottom" Click="btn_way_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}" CornerRadius="14">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="LightBlue"/>
                                        <Setter Property="Foreground" Value="black"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="LightSkyBlue"/>
                                        <Setter Property="Foreground" Value="black"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="DarkGray"/>
                                        <Setter Property="Foreground" Value="LightGray"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <Button x:Name="btn_Lab" Content="Envoyer au Lab" HorizontalAlignment="Right" Margin="0,0,10,111" IsEnabled="{Binding enableEntrepot}" VerticalAlignment="Bottom" Width="259" Height="28" Click="btn_Lab_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}" CornerRadius="14">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="LightBlue"/>
                                        <Setter Property="Foreground" Value="black"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="LightSkyBlue"/>
                                        <Setter Property="Foreground" Value="black"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="DarkGray"/>
                                        <Setter Property="Foreground" Value="LightGray"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <GroupBox Margin="10,0,0,10" BorderBrush="DimGray" Height="142" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="532" BorderThickness="1.5" >
                        <GroupBox.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text=" Filtres / Recherches">
                                    <TextBlock.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                    <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </StackPanel>
                        </GroupBox.Header>

                        <Grid>

                            <TextBlock Text="Numéro de série :" Margin="5,7,340,0" Height="19" VerticalAlignment="Top">
                                <TextBlock.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>

                            <TextBox x:Name="tb_serialSearch" Text="{Binding serialSearch, UpdateSourceTrigger=PropertyChanged}" Margin="5,24,0,0" TextWrapping="NoWrap" TextChanged="tb_serialSearch_TextChanged" HorizontalAlignment="Left" Width="96" Height="18" VerticalAlignment="Top">
                                <TextBox.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                <Setter Property="ItemsControl.Background" Value="#FF323232"/>
                                                <Setter Property="TextBlock.Foreground" Value="White"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>

                            <TextBlock Text="Emplacement :" Margin="222,47,206,0" Height="19" VerticalAlignment="Top">
                                <TextBlock.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>

                            <TextBox x:Name="tb_empSearch" Text="{Binding empSearch, UpdateSourceTrigger=PropertyChanged}" Margin="222,64,0,0" TextWrapping="NoWrap" HorizontalAlignment="Left" Width="96" Height="18" VerticalAlignment="Top" TextChanged="tb_empSearch_TextChanged">
                                <TextBox.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                <Setter Property="ItemsControl.Background" Value="#FF323232"/>
                                                <Setter Property="TextBlock.Foreground" Value="White"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>

                            <TextBlock Text="RF :" Margin="114,7,231,93">
                                <TextBlock.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>

                            <TextBox x:Name="tb_RFsearch" Text="{Binding rfSearch, UpdateSourceTrigger=PropertyChanged}" Margin="114,24,0,0" TextWrapping="NoWrap" HorizontalAlignment="Left" Width="96" TextChanged="tb_RFsearch_TextChanged" Height="18" VerticalAlignment="Top">
                                <TextBox.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                <Setter Property="ItemsControl.Background" Value="#FF323232"/>
                                                <Setter Property="TextBlock.Foreground" Value="White"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>

                            <TextBlock Text="Type :" Margin="327,7,115,0" Height="19" VerticalAlignment="Top">
                                <TextBlock.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>

                            <ComboBox x:Name="cb_type" ItemsSource="{Binding types}" IsEnabled="true" Margin="327,24,0,0" SelectedIndex="{Binding typeSearch}" SelectedItem="{Binding selectedType}" VerticalAlignment="Top" HorizontalAlignment="Left" Width="92" SelectionChanged="cb_type_SelectionChanged"/>

                            <TextBlock Text="Modèle :" Margin="423,7,13,0" Height="19" VerticalAlignment="Top">
                                <TextBlock.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>

                            <ComboBox x:Name="cb_model" IsEnabled="False" Margin="423,24,0,0" SelectedIndex="{Binding modelSearch}" ItemsSource="{Binding modelSearchCB}" SelectedItem="{Binding modelText}" VerticalAlignment="Top" SelectionChanged="cb_model_SelectionChanged" HorizontalAlignment="Left" Width="92" />

                            <TextBlock Text="Statut :" Margin="377,51,65,49" Height="19" >
                                <TextBlock.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>

                            <ComboBox x:Name="cb_statut" IsEnabled="true" Margin="377,68,0,0" SelectedIndex="{Binding statutSearch}" VerticalAlignment="Top" HorizontalAlignment="Left" Width="92" SelectionChanged="cb_statut_SelectionChanged" >
                                <ComboBoxItem Content="Tous"/>
                                <ComboBoxItem Content="En Stock"/>
                                <ComboBoxItem Content="Réservé"/>
                                <ComboBoxItem Content="Sortie"/>
                                <ComboBoxItem Content="Cloné"/>
                                <ComboBoxItem Content="Quantum"/>
                                <ComboBoxItem Content="Expiration"/>
                            </ComboBox>

                            <TextBlock Text="Date clonage :" Margin="5,47,340,0" Height="19" VerticalAlignment="Top">
                                <TextBlock.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>

                            <TextBox x:Name="tb_dateClone" Text="{Binding cloneSearch, UpdateSourceTrigger=PropertyChanged}" Margin="5,64,0,0" TextWrapping="NoWrap" HorizontalAlignment="Left" Width="96" TextChanged="tb_dateClone_TextChanged" Height="18" VerticalAlignment="Top">
                                <TextBox.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                <Setter Property="ItemsControl.Background" Value="#FF323232"/>
                                                <Setter Property="TextBlock.Foreground" Value="White"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>

                            <TextBlock Text="(aaaa-mm-jj)" Margin="5,80,340,0" FontSize="10" Height="20" VerticalAlignment="Top">
                                <TextBlock.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>

                            <TextBlock Text="Date de Sortie :" Margin="114,47,305,53" Height="19">
                                <TextBlock.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>

                            <TextBox x:Name="tb_dateSortie" Height="18" Text="{Binding sortieSearch, UpdateSourceTrigger=PropertyChanged}" Margin="114,64,0,0" TextWrapping="NoWrap" VerticalAlignment="Top" HorizontalAlignment="Left" Width="96" TextChanged="tb_dateSortie_TextChanged">
                                <TextBox.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                <Setter Property="ItemsControl.Background" Value="#FF323232"/>
                                                <Setter Property="TextBlock.Foreground" Value="White"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>

                            <TextBlock Text="(aaaa-mm-jj)" Margin="114,80,231,0" FontSize="10" Height="20" VerticalAlignment="Top">
                                <TextBlock.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>

                            <TextBlock Text="Date d'ajout :" Margin="222,7,197,93" Height="19">
                                <TextBlock.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>

                            <TextBox x:Name="tb_dateAjout" Height="18" Text="{Binding ajoutSearch, UpdateSourceTrigger=PropertyChanged}" Margin="222,24,0,0" TextWrapping="NoWrap" VerticalAlignment="Top" HorizontalAlignment="Left" Width="96" TextChanged="tb_dateAjout_TextChanged">
                                <TextBox.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                <Setter Property="ItemsControl.Background" Value="#FF323232"/>
                                                <Setter Property="TextBlock.Foreground" Value="White"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>

                            <Button x:Name="btn_Filtre" Content="Enlever les filtres" HorizontalAlignment="Center" Width="108" Click="btn_Filtre_Click" Margin="0,100,0,0" Height="19" VerticalAlignment="Top">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Border Background="{TemplateBinding Background}" CornerRadius="10">
                                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="LightBlue"/>
                                                <Setter Property="Foreground" Value="black"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Background" Value="LightSkyBlue"/>
                                                <Setter Property="Foreground" Value="black"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Background" Value="DarkGray"/>
                                                <Setter Property="Foreground" Value="LightGray"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>

                        </Grid>
                    </GroupBox>

                    <Label x:Name="lbl_count" Content="{Binding count}" Margin="7,0,0,157" VerticalAlignment="Bottom" Height="25" HorizontalAlignment="Left" Width="68">
                        <Label.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>

                </Grid>

            </TabItem>

            <TabItem x:Name="tabLab" FontSize="12" Width="125" Margin="7,1,-7,-1" Visibility="{Binding visLab}">

                <TabItem.Header>
                    <Grid >
                        <TextBlock TextAlignment="Center" Text="Lab Clonage" FontFamily="Arial" FontSize="12" Height="18" Width="100" Margin="0,2,0,-2" />
                    </Grid>
                </TabItem.Header>

                <Grid>


                    <Label x:Name="lbl_countLab" Content="{Binding countLab}" Margin="286,0,0,7" VerticalAlignment="Bottom" Height="25" HorizontalAlignment="Left" Width="68">
                        <Label.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>

                    <TextBlock Text="Numéro de série :" Margin="364,0,0,5" Height="18" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="96">
                        <TextBlock.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <TextBox x:Name="tb_labSN" Text="{Binding searchSNlab, UpdateSourceTrigger=PropertyChanged}" Margin="461,0,0,5" TextWrapping="NoWrap" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="140" TextChanged="tb_labSN_TextChanged">
                        <TextBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="ItemsControl.Background" Value="#FF323232"/>
                                        <Setter Property="TextBlock.Foreground" Value="White"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>

                    <TextBlock Text="Modèle :" Margin="626,0,0,5" Height="18" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="49">
                        <TextBlock.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <TextBox x:Name="tb_labMod" Text="{Binding searchMODlab, UpdateSourceTrigger=PropertyChanged}" Margin="676,0,0,5" TextWrapping="NoWrap" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="140" TextChanged="tb_labMod_TextChanged">
                        <TextBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="ItemsControl.Background" Value="#FF323232"/>
                                        <Setter Property="TextBlock.Foreground" Value="White"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>

                    <ListView x:Name="ListLab" VirtualizingPanel.VirtualizationMode="Recycling" VirtualizingPanel.ScrollUnit="Pixel" ItemsSource="{Binding invPostesViewLab}" Margin="286,10,10,28" SelectionMode="Extended"  MouseLeftButtonDown="ListLab_MouseLeftButtonDown" >

                        <ListView.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="ItemsControl.Background" Value="#FFECECEC"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.Style>

                        <ListView.Resources>
                            <ContextMenu x:Key="ItemContextMenu">
                                <MenuItem x:Name="copySNlab" Header="Copier le numéros de série" FontSize="12" Foreground="Black" Click="copySNlab_Click"/>
                            </ContextMenu>

                            <Style TargetType="{x:Type GridViewColumnHeader}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                                            <Border BorderThickness="0,0,0,1" BorderBrush="LightGray" Background="LightSteelBlue">
                                                <TextBlock x:Name="ContentHeader" Text="{TemplateBinding Content}" Padding="5,5,5,0" Width="{TemplateBinding Width}" TextAlignment="Center" />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                <Setter Property="Foreground" Value="Black" />
                                <Setter Property="FontFamily" Value="Segoe UI" />
                                <Setter Property="FontSize" Value="12" />
                            </Style>

                        </ListView.Resources>

                        <ListView.View>
                            <GridView AllowsColumnReorder="False">

                                <GridViewColumn Header=" Type" DisplayMemberBinding="{Binding type}">
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Modèle" DisplayMemberBinding="{Binding model}">
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Numéro de série" DisplayMemberBinding="{Binding serial}">
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>


                                <GridViewColumn Header=" # Actif" DisplayMemberBinding="{Binding asset}">
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Emplacement" DisplayMemberBinding="{Binding emplacement}">
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Expiration Clonage" DisplayMemberBinding="{Binding dateCloneValid}">
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                            </GridView>
                        </ListView.View>

                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Style.Setters>
                                    <Setter Property="Foreground" Value="black"/>
                                    <Setter Property="FontWeight" Value="Normal"/>
                                    <Setter Property="FontSize" Value="12"/>
                                    <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}"/>
                                </Style.Setters>

                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding xcolor}" Value="1">
                                        <Setter Property="Foreground" Value="DarkOrange"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding xcolor}" Value="2">
                                        <Setter Property="Foreground" Value="Red"/>
                                    </DataTrigger>
                                </Style.Triggers>

                            </Style>

                        </ListView.ItemContainerStyle>

                    </ListView>

                    <GroupBox Margin="10,10,0,10" BorderBrush="DimGray" HorizontalAlignment="Left" Width="266" BorderThickness="1.5" >
                        <GroupBox.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text=" Validation Clonage">
                                    <TextBlock.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                    <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </StackPanel>
                        </GroupBox.Header>

                        <Grid>

                            <Label x:Name="lbl_countLabErreur" Content="{Binding countAddLab}" Margin="151,10,35,0" HorizontalContentAlignment="Right" VerticalContentAlignment="Bottom" FontSize="14" VerticalAlignment="Top" Height="26">
                                <Label.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>

                            <Label x:Name="cloneLab" Content="Numéro de série :" HorizontalAlignment="Left" VerticalAlignment="Top" Width="116" Margin="30,10,0,0">
                                <Label.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>

                            <TextBox x:Name="tb_serialLab" VerticalScrollBarVisibility="Auto" Margin="0,36,0,97" TextWrapping="Wrap" IsEnabled="{Binding enableLab}" AcceptsReturn="True" HorizontalAlignment="Center" Width="184" TextChanged="tb_serialLab_TextChanged" Loaded="tb_serialLab_Loaded">
                                <TextBox.Style>
                                    <Style TargetType="TextBox">
                                        <Setter Property="Background" Value="White"/>
                                        <Setter Property="Foreground" Value="black"/>

                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding settings.DarkMode}" Value="true"/>
                                                    <Condition Binding="{Binding snColor}" Value="false"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Foreground" Value="LightGray"/>
                                                <Setter Property="Background" Value="#FF323232"/>
                                            </MultiDataTrigger>

                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding settings.DarkMode}" Value="true"/>
                                                    <Condition Binding="{Binding snColor}" Value="true"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Foreground" Value="Red"/>
                                                <Setter Property="Background" Value="#FF323232"/>
                                            </MultiDataTrigger>

                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding settings.DarkMode}" Value="false"/>
                                                    <Condition Binding="{Binding snColor}" Value="true"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Foreground" Value="Red"/>
                                            </MultiDataTrigger>


                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>

                            <TextBox x:Name="tb_erreur" HorizontalAlignment="Center" Margin="0,0,0,33" Visibility="Visible" IsReadOnly="True" Foreground="Red" Background="Transparent" TextWrapping="Wrap" BorderThickness="0" VerticalScrollBarVisibility="Auto" Width="254" Height="64" VerticalAlignment="Bottom"/>

                            <Button x:Name="btn_LabClone" Content="Clonage Validé" IsEnabled="False" HorizontalAlignment="Center" Width="102" Click="btn_LabClone_Click" Height="28" VerticalAlignment="Bottom">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Border Background="{TemplateBinding Background}" CornerRadius="14">
                                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="LightBlue"/>
                                                <Setter Property="Foreground" Value="black"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Background" Value="LightSkyBlue"/>
                                                <Setter Property="Foreground" Value="black"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Background" Value="DarkGray"/>
                                                <Setter Property="Foreground" Value="LightGray"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>

                        </Grid>
                    </GroupBox>

                </Grid>
            </TabItem>

            <TabItem x:Name="tabAccess" FontSize="12" Width="125" Margin="6,1,-6,-1" Visibility="{Binding visSeuil}">

                <TabItem.Header>
                    <Grid >
                        <TextBlock TextAlignment="Center" Text="Seuil / Accessoires" FontFamily="Arial" FontSize="12" Height="18" Width="100" Margin="0,2,0,-2" />
                    </Grid>
                </TabItem.Header>

                <Grid>

                    <Button x:Name="btn_rapportSeuil" Content="Créer Rapport Excel" Margin="0,97,454,0" IsEnabled="{Binding enableEntrepot}" HorizontalAlignment="Right" Width="152" Height="28" VerticalAlignment="Top" Click="btn_rapportSeuil_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}" CornerRadius="14">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="LightBlue"/>
                                        <Setter Property="Foreground" Value="black"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="LightSkyBlue"/>
                                        <Setter Property="Foreground" Value="black"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="DarkGray"/>
                                        <Setter Property="Foreground" Value="LightGray"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <GroupBox Margin="10,10,637,0" BorderBrush="DimGray" Height="174" VerticalAlignment="Top" BorderThickness="1.5">
                        <GroupBox.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text=" Seuils">
                                    <TextBlock.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                    <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </StackPanel>
                        </GroupBox.Header>

                        <Grid>
                            <ListView x:Name="viewSeuil" VirtualizingPanel.VirtualizationMode="Recycling" VirtualizingPanel.ScrollUnit="Pixel" ItemsSource="{Binding seuil}"  SelectionMode="Single"  MouseLeftButtonDown="ListLab_MouseLeftButtonDown" >

                                <ListView.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                <Setter Property="ItemsControl.Background" Value="#FFECECEC"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListView.Style>

                                <ListView.Resources>
                                    <ContextMenu x:Key="ItemContextMenu">
                                        <MenuItem  Header="À Venir" FontSize="12" Foreground="Black"/>
                                    </ContextMenu>

                                    <Style TargetType="{x:Type GridViewColumnHeader}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                                                    <Border BorderThickness="0,0,0,1" BorderBrush="LightGray" Background="LightSteelBlue">
                                                        <TextBlock x:Name="ContentHeader" Text="{TemplateBinding Content}" Padding="5,5,5,0" Width="{TemplateBinding Width}" TextAlignment="Center" />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                        <Setter Property="Foreground" Value="Black" />
                                        <Setter Property="FontFamily" Value="Segoe UI" />
                                        <Setter Property="FontSize" Value="12" />
                                    </Style>

                                </ListView.Resources>

                                <ListView.View>
                                    <GridView AllowsColumnReorder="False">

                                        <GridViewColumn Header=" Type/Modèle" DisplayMemberBinding="{Binding type}">
                                            <GridViewColumn.HeaderContainerStyle>
                                                <Style TargetType="{x:Type GridViewColumnHeader}">
                                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                    <Setter Property="FontWeight" Value="Normal"/>
                                                    <Setter Property="FontSize" Value="14"/>
                                                    <Setter Property="Background" Value="LightSteelBlue"/>
                                                    <Setter Property="BorderBrush" Value="LightGray"/>
                                                </Style>
                                            </GridViewColumn.HeaderContainerStyle>
                                        </GridViewColumn>

                                        <GridViewColumn Header=" Qté Max" DisplayMemberBinding="{Binding max}">
                                            <GridViewColumn.HeaderContainerStyle>
                                                <Style TargetType="{x:Type GridViewColumnHeader}">
                                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                    <Setter Property="FontWeight" Value="Normal"/>
                                                    <Setter Property="FontSize" Value="14"/>
                                                    <Setter Property="Background" Value="LightSteelBlue"/>
                                                    <Setter Property="BorderBrush" Value="LightGray"/>
                                                </Style>
                                            </GridViewColumn.HeaderContainerStyle>
                                        </GridViewColumn>

                                        <GridViewColumn Header=" Seuil Alerte" DisplayMemberBinding="{Binding seuil}">
                                            <GridViewColumn.HeaderContainerStyle>
                                                <Style TargetType="{x:Type GridViewColumnHeader}">
                                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                    <Setter Property="FontWeight" Value="Normal"/>
                                                    <Setter Property="FontSize" Value="14"/>
                                                    <Setter Property="Background" Value="LightSteelBlue"/>
                                                    <Setter Property="BorderBrush" Value="LightGray"/>
                                                </Style>
                                            </GridViewColumn.HeaderContainerStyle>
                                        </GridViewColumn>

                                        <GridViewColumn Header=" Qté Actuelle" DisplayMemberBinding="{Binding actuel}">
                                            <GridViewColumn.HeaderContainerStyle>
                                                <Style TargetType="{x:Type GridViewColumnHeader}">
                                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                    <Setter Property="FontWeight" Value="Normal"/>
                                                    <Setter Property="FontSize" Value="14"/>
                                                    <Setter Property="Background" Value="LightSteelBlue"/>
                                                    <Setter Property="BorderBrush" Value="LightGray"/>
                                                </Style>
                                            </GridViewColumn.HeaderContainerStyle>
                                        </GridViewColumn>

                                        <GridViewColumn Header="" DisplayMemberBinding="{Binding commande}">
                                            <GridViewColumn.HeaderContainerStyle>
                                                <Style TargetType="{x:Type GridViewColumnHeader}">
                                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                    <Setter Property="FontWeight" Value="Normal"/>
                                                    <Setter Property="FontSize" Value="14"/>
                                                    <Setter Property="Background" Value="LightSteelBlue"/>
                                                    <Setter Property="BorderBrush" Value="LightGray"/>
                                                </Style>
                                            </GridViewColumn.HeaderContainerStyle>
                                        </GridViewColumn>

                                    </GridView>
                                </ListView.View>

                                <ListView.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}">
                                        <Style.Setters>
                                            <Setter Property="Foreground" Value="black"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="12"/>
                                            <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}"/>
                                        </Style.Setters>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding color}" Value="1">
                                                <Setter Property="Foreground" Value="DarkOrange"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding color}" Value="2">
                                                <Setter Property="Foreground" Value="Red"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListView.ItemContainerStyle>

                            </ListView>

                        </Grid>

                    </GroupBox>

                    <GroupBox Margin="10,189,430,10" BorderBrush="DimGray" BorderThickness="1.5">
                        <GroupBox.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text=" Accessoires">
                                    <TextBlock.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                    <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </StackPanel>
                        </GroupBox.Header>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="441*"/>
                                <ColumnDefinition Width="202"/>
                            </Grid.ColumnDefinitions>

                            <Label x:Name="lbl_selection" Content="Sélection:" HorizontalAlignment="Right" Margin="0,70,140,0" Width="Auto" Grid.Column="1" Height="26" VerticalAlignment="Top">
                                <Label.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>

                            <TextBox x:Name="tb_type" IsEnabled="False" Margin="0,92,10,0" TextWrapping="NoWrap" HorizontalScrollBarVisibility="Disabled" TextChanged="tb_type_TextChanged" HorizontalAlignment="Right" Width="186" Grid.Column="1" Height="18" VerticalAlignment="Top">
                                <TextBox.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                <Setter Property="ItemsControl.Background" Value="#FF323232"/>
                                                <Setter Property="TextBlock.Foreground" Value="White"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>

                            <Label x:Name="lbl_alerte" Content="Qté Alerte:" HorizontalAlignment="Right" Margin="0,107,135,0" Width="Auto" Grid.ColumnSpan="2" Height="26" VerticalAlignment="Top">
                                <Label.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>

                            <TextBox x:Name="tb_alerte" IsEnabled="False" HorizontalAlignment="Right" Margin="0,129,146,0" TextWrapping="NoWrap" HorizontalScrollBarVisibility="Disabled" Width="50" PreviewTextInput="tb_PreviewTextInput" TextChanged="tb_alerte_TextChanged" Grid.Column="1" Height="18" VerticalAlignment="Top" >
                                <TextBox.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                <Setter Property="ItemsControl.Background" Value="#FF323232"/>
                                                <Setter Property="TextBlock.Foreground" Value="White"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>

                            <Label x:Name="lbl_max" Content="Qté Max:" HorizontalAlignment="Right" Margin="0,107,78,0" Width="Auto" Grid.Column="1" Height="26" VerticalAlignment="Top">
                                <Label.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>

                            <TextBox x:Name="tb_max" IsEnabled="False" HorizontalAlignment="Right" Margin="0,129,80,0" TextWrapping="NoWrap" HorizontalScrollBarVisibility="Disabled" Width="50" PreviewTextInput="tb_PreviewTextInput" TextChanged="tb_max_TextChanged" Grid.Column="1" Height="18" VerticalAlignment="Top" >
                                <TextBox.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                <Setter Property="ItemsControl.Background" Value="#FF323232"/>
                                                <Setter Property="TextBlock.Foreground" Value="White"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>

                            <Button x:Name="btn_Modifier" Content="Modifier" IsEnabled="False" HorizontalAlignment="Right" Margin="0,129,10,0" Width="62" Click="btn_Modifier_Click" Grid.Column="1" Height="18" VerticalAlignment="Top">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Border Background="{TemplateBinding Background}" CornerRadius="10">
                                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="LightBlue"/>
                                                <Setter Property="Foreground" Value="black"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Background" Value="LightSkyBlue"/>
                                                <Setter Property="Foreground" Value="black"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Background" Value="DarkGray"/>
                                                <Setter Property="Foreground" Value="LightGray"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>

                            <Separator HorizontalAlignment="Right" Margin="0,152,9,0" Width="192" Grid.Column="1" Height="24" VerticalAlignment="Top">
                                <Separator.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                <Setter Property="ItemsControl.BorderBrush" Value="LightGray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Separator.Style>
                            </Separator>

                            <Label x:Name="lbl_ajout" Content="Qté Actuelle à ajouter :" HorizontalAlignment="Right" Margin="0,185,71,0" Width="Auto" Grid.ColumnSpan="2" Height="26" VerticalAlignment="Top">
                                <Label.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>

                            <TextBox x:Name="tb_ajout" IsEnabled="False" HorizontalAlignment="Right" Margin="0,207,146,0" TextWrapping="NoWrap" HorizontalScrollBarVisibility="Disabled" Width="50" PreviewTextInput="tb_PreviewTextInput" TextChanged="tb_ajout_TextChanged" Grid.Column="1" Height="18" VerticalAlignment="Top" >
                                <TextBox.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                <Setter Property="ItemsControl.Background" Value="#FF323232"/>
                                                <Setter Property="TextBlock.Foreground" Value="White"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>

                            <Button x:Name="btn_AjoutQ" Content="Ajouter" IsEnabled="False" HorizontalAlignment="Right" Margin="0,207,79,0" Width="62" Click="btn_AjoutQ_Click" Grid.Column="1" Height="18" VerticalAlignment="Top">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Border Background="{TemplateBinding Background}" CornerRadius="10">
                                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="LightBlue"/>
                                                <Setter Property="Foreground" Value="black"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Background" Value="LightSkyBlue"/>
                                                <Setter Property="Foreground" Value="black"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Background" Value="DarkGray"/>
                                                <Setter Property="Foreground" Value="LightGray"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>

                            <Label x:Name="lbl_retrait" Content="Qté Actuelle à enlever :" HorizontalAlignment="Right" Margin="0,237,70,0" Width="Auto" Grid.ColumnSpan="2" Height="26" VerticalAlignment="Top">
                                <Label.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>

                            <TextBox x:Name="tb_retrait" IsEnabled="False" HorizontalAlignment="Right" Margin="0,259,146,0" TextWrapping="NoWrap" HorizontalScrollBarVisibility="Disabled" Width="50" PreviewTextInput="tb_PreviewTextInput" TextChanged="tb_retrait_TextChanged" Grid.Column="1" Height="18" VerticalAlignment="Top" >
                                <TextBox.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                <Setter Property="ItemsControl.Background" Value="#FF323232"/>
                                                <Setter Property="TextBlock.Foreground" Value="White"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>

                            <Button x:Name="btn_retraitQ" Content="Enlever" IsEnabled="False" HorizontalAlignment="Right" Margin="0,259,79,0" Width="62" Click="btn_retraitQ_Click" Grid.Column="1" Height="18" VerticalAlignment="Top">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Border Background="{TemplateBinding Background}" CornerRadius="10">
                                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="LightBlue"/>
                                                <Setter Property="Foreground" Value="black"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Background" Value="LightSkyBlue"/>
                                                <Setter Property="Foreground" Value="black"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Background" Value="DarkGray"/>
                                                <Setter Property="Foreground" Value="LightGray"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>

                            <Button x:Name="btn_newAccess" Content="Ajouter un Accessoire" HorizontalAlignment="Right" Margin="0,16,10,0" IsEnabled="{Binding enableEntrepot}" Width="187" Click="btn_newAccess_Click" Height="28" VerticalAlignment="Top" Grid.Column="1" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Border Background="{TemplateBinding Background}" CornerRadius="14">
                                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="LightBlue"/>
                                                <Setter Property="Foreground" Value="black"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Background" Value="LightSkyBlue"/>
                                                <Setter Property="Foreground" Value="black"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Background" Value="DarkGray"/>
                                                <Setter Property="Foreground" Value="LightGray"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>

                            <Separator HorizontalAlignment="Right" Margin="0,53,10,0" Width="192" Grid.ColumnSpan="2" Height="24" VerticalAlignment="Top">
                                <Separator.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                <Setter Property="ItemsControl.BorderBrush" Value="LightGray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Separator.Style>
                            </Separator>

                            <ListView x:Name="viewAccessoire" VirtualizingPanel.VirtualizationMode="Recycling" VirtualizingPanel.ScrollUnit="Pixel" ItemsSource="{Binding seuilAccess}" SelectionMode="Single"  MouseLeftButtonDown="ListLab_MouseLeftButtonDown" SelectionChanged="viewAccessoire_SelectionChanged" Margin="0,0,5,0" >

                                <ListView.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                <Setter Property="ItemsControl.Background" Value="#FFECECEC"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListView.Style>

                                <ListView.Resources>
                                    <ContextMenu x:Key="ItemContextMenu">
                                        <MenuItem x:Name="accessDel"  Header="Supprimer" FontSize="12" Foreground="Black" Click="accessDel_Click"/>
                                    </ContextMenu>

                                    <Style TargetType="{x:Type GridViewColumnHeader}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                                                    <Border BorderThickness="0,0,0,1" BorderBrush="LightGray" Background="LightSteelBlue">
                                                        <TextBlock x:Name="ContentHeader" Text="{TemplateBinding Content}" Padding="5,5,5,0" Width="{TemplateBinding Width}" TextAlignment="Center" />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                        <Setter Property="Foreground" Value="Black" />
                                        <Setter Property="FontFamily" Value="Segoe UI" />
                                        <Setter Property="FontSize" Value="12" />
                                    </Style>

                                </ListView.Resources>

                                <ListView.View>
                                    <GridView AllowsColumnReorder="False">

                                        <GridViewColumn Header=" Type/Modèle" DisplayMemberBinding="{Binding type}">
                                            <GridViewColumn.HeaderContainerStyle>
                                                <Style TargetType="{x:Type GridViewColumnHeader}">
                                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                    <Setter Property="FontWeight" Value="Normal"/>
                                                    <Setter Property="FontSize" Value="14"/>
                                                    <Setter Property="Background" Value="LightSteelBlue"/>
                                                    <Setter Property="BorderBrush" Value="LightGray"/>
                                                </Style>
                                            </GridViewColumn.HeaderContainerStyle>
                                        </GridViewColumn>

                                        <GridViewColumn Header=" Qté Max" DisplayMemberBinding="{Binding max}">
                                            <GridViewColumn.HeaderContainerStyle>
                                                <Style TargetType="{x:Type GridViewColumnHeader}">
                                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                    <Setter Property="FontWeight" Value="Normal"/>
                                                    <Setter Property="FontSize" Value="14"/>
                                                    <Setter Property="Background" Value="LightSteelBlue"/>
                                                    <Setter Property="BorderBrush" Value="LightGray"/>
                                                </Style>
                                            </GridViewColumn.HeaderContainerStyle>
                                        </GridViewColumn>

                                        <GridViewColumn Header=" Seuil Alerte" DisplayMemberBinding="{Binding seuil}">
                                            <GridViewColumn.HeaderContainerStyle>
                                                <Style TargetType="{x:Type GridViewColumnHeader}">
                                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                    <Setter Property="FontWeight" Value="Normal"/>
                                                    <Setter Property="FontSize" Value="14"/>
                                                    <Setter Property="Background" Value="LightSteelBlue"/>
                                                    <Setter Property="BorderBrush" Value="LightGray"/>
                                                </Style>
                                            </GridViewColumn.HeaderContainerStyle>
                                        </GridViewColumn>

                                        <GridViewColumn Header=" Qté Actuelle" DisplayMemberBinding="{Binding actuel}">
                                            <GridViewColumn.HeaderContainerStyle>
                                                <Style TargetType="{x:Type GridViewColumnHeader}">
                                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                    <Setter Property="FontWeight" Value="Normal"/>
                                                    <Setter Property="FontSize" Value="14"/>
                                                    <Setter Property="Background" Value="LightSteelBlue"/>
                                                    <Setter Property="BorderBrush" Value="LightGray"/>
                                                </Style>
                                            </GridViewColumn.HeaderContainerStyle>
                                        </GridViewColumn>

                                        <GridViewColumn Header="" DisplayMemberBinding="{Binding commande}">
                                            <GridViewColumn.HeaderContainerStyle>
                                                <Style TargetType="{x:Type GridViewColumnHeader}">
                                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                    <Setter Property="FontWeight" Value="Normal"/>
                                                    <Setter Property="FontSize" Value="14"/>
                                                    <Setter Property="Background" Value="LightSteelBlue"/>
                                                    <Setter Property="BorderBrush" Value="LightGray"/>
                                                </Style>
                                            </GridViewColumn.HeaderContainerStyle>
                                        </GridViewColumn>

                                    </GridView>
                                </ListView.View>

                                <ListView.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}">
                                        <Style.Setters>
                                            <Setter Property="Foreground" Value="black"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="12"/>
                                            <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}"/>
                                        </Style.Setters>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding color}" Value="1">
                                                <Setter Property="Foreground" Value="DarkOrange"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding color}" Value="2">
                                                <Setter Property="Foreground" Value="Red"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListView.ItemContainerStyle>

                            </ListView>

                        </Grid>
                    </GroupBox>
                </Grid>
            </TabItem>


            <TabItem x:Name="tabPrepare" FontSize="12" Width="125" Margin="5,1,-5,-1" Visibility="{Binding visPrep}" IsEnabled="True">

                <TabItem.Header>
                    <Grid >
                        <TextBlock TextAlignment="Center" Text="Préparation" FontFamily="Arial" FontSize="12" Height="18" Width="100" Margin="0,2,0,-2" />
                    </Grid>
                </TabItem.Header>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="144"/>
                        <ColumnDefinition Width="170*"/>
                        <ColumnDefinition Width="168*"/>
                        <ColumnDefinition Width="168*"/>
                        <ColumnDefinition Width="168*"/>
                        <ColumnDefinition Width="168*"/>
                        <ColumnDefinition Width="168*"/>
                        <ColumnDefinition Width="175*"/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.ColumnSpan="8" Height="146" VerticalAlignment="Top">

                        <GroupBox Margin="889,35,0,0" BorderBrush="DimGray" BorderThickness="2" Height="101" VerticalAlignment="Top" HorizontalAlignment="Left" Width="196" >
                            <GroupBox.Header>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text=" Sortie ">
                                        <TextBlock.Style>
                                            <Style>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                        <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </StackPanel>
                            </GroupBox.Header>

                            <Grid>

                                <Label x:Name="rf" Content="Demande (RF) :" HorizontalAlignment="Left" VerticalAlignment="Top" Width="93" Margin="3,0,0,0">
                                    <Label.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                    <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Label.Style>
                                </Label>

                                <TextBox x:Name="tb_RFsortie" HorizontalAlignment="Left" IsEnabled="false" HorizontalScrollBarVisibility="Disabled" TextWrapping="NoWrap" VerticalAlignment="Top" Width="91" Height="18" Margin="93,5,0,0" TextChanged="tb_RFsortie_TextChanged">
                                    <TextBox.ContextMenu>
                                        <ContextMenu Visibility="{Binding admin}">
                                            <MenuItem x:Name="ctx_prepRF" Header="Ajout RF" Visibility="{Binding admin}" Click="ctx_prepRF_Click" />
                                        </ContextMenu>
                                    </TextBox.ContextMenu>

                                    <TextBox.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                    <Setter Property="ItemsControl.Background" Value="#FF323232"/>
                                                    <Setter Property="TextBlock.Foreground" Value="White"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>

                                <Label x:Name="cbSortie" Content="Cage/Shipping :" HorizontalAlignment="Left" VerticalAlignment="Top" Width="96" Margin="0,25,0,0">
                                    <Label.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                    <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Label.Style>
                                </Label>

                                <ComboBox x:Name="cb_sortie" HorizontalAlignment="Left" IsEnabled="false" VerticalAlignment="Top" Width="91" Margin="93,28,0,0" SelectionChanged="cb_sortie_SelectionChanged" >
                                    <ComboBoxItem Content="Cage"/>
                                    <ComboBoxItem Content="Shipping"/>
                                </ComboBox>

                                <Button x:Name="btn_SortiePrep" Content="Sortie" HorizontalAlignment="Center" IsEnabled="false" Width="72" Margin="0,56,0,0" Click="btn_SortiePrep_Click">
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Border Background="{TemplateBinding Background}" CornerRadius="12">
                                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="LightBlue"/>
                                                    <Setter Property="Foreground" Value="black"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Background" Value="LightSkyBlue"/>
                                                    <Setter Property="Foreground" Value="black"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Background" Value="DarkGray"/>
                                                    <Setter Property="Foreground" Value="LightGray"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>

                            </Grid>
                        </GroupBox>



                        <GroupBox  BorderBrush="DimGray" BorderThickness="2" Height="80" VerticalAlignment="Top" Margin="625,10,0,0" HorizontalAlignment="Left" Width="259" >
                            <GroupBox.Header>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text=" Commentaires ">
                                        <TextBlock.Style>
                                            <Style>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                        <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </StackPanel>
                            </GroupBox.Header>

                            <GroupBox.ContextMenu>
                                <ContextMenu>
                                    <MenuItem x:Name="ctx_prepComment" Header="Ajouter/Modifier Commentaires" Click="ctx_prepComment_Click" />
                                </ContextMenu>
                            </GroupBox.ContextMenu>

                            <TextBox x:Name="tb_comment" Background="Transparent" Cursor="Arrow" BorderThickness="0" AcceptsReturn="True" TextWrapping="Wrap" IsReadOnly="True"  >
                                <TextBox.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                                <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>


                        </GroupBox>

                        <Button x:Name="btn_modifQte" Content="Modifier les Qtés" Margin="889,15,0,0" IsEnabled="False" Click="btn_modifQte_Click" Height="20" VerticalAlignment="Top" HorizontalAlignment="Left" Width="110">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}" CornerRadius="10">
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="LightBlue"/>
                                            <Setter Property="Foreground" Value="black"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Background" Value="LightSkyBlue"/>
                                            <Setter Property="Foreground" Value="black"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Background" Value="DarkGray"/>
                                            <Setter Property="Foreground" Value="LightGray"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Button x:Name="btn_RapportPrep" Content="Rapport" IsEnabled="False" Margin="1005,15,0,0" Height="20" VerticalAlignment="Top" Click="btn_RapportPrep_Click" HorizontalAlignment="Left" Width="80">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}" CornerRadius="10">
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="LightBlue"/>
                                            <Setter Property="Foreground" Value="black"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Background" Value="LightSkyBlue"/>
                                            <Setter Property="Foreground" Value="black"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Background" Value="DarkGray"/>
                                            <Setter Property="Foreground" Value="LightGray"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                    </Grid>



                    <TextBlock Text="Semaine :" Margin="10,4,152,0" Height="19" VerticalAlignment="Top" Grid.ColumnSpan="3">
                        <TextBlock.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <ComboBox x:Name="cb_semaine" HorizontalAlignment="Left" ItemsSource="{Binding semaine}" Margin="10,23,0,0" VerticalAlignment="Top" Width="130" SelectionChanged="cb_semaine_SelectionChanged">
                        <ComboBox.ContextMenu>
                            <ContextMenu>
                                <MenuItem x:Name="ctx_ajoutSemaine" Header="Ajouter Semaine" Visibility="{Binding admin}" Click="ctx_ajoutSemaine_Click" />
                            </ContextMenu>
                        </ComboBox.ContextMenu>
                    </ComboBox>

                    <TextBlock Text="Transit :" Margin="10,49,152,0" Height="19" VerticalAlignment="Top" Grid.ColumnSpan="3">
                        <TextBlock.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <Button x:Name="btn_ajoutTransit" Content="Ajout transit" Margin="10,593,0,0" Visibility="{Binding admin}" HorizontalAlignment="Left" Width="130" Click="btn_ajoutTransit_Click" Height="20" VerticalAlignment="Top">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}" CornerRadius="10">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="LightBlue"/>
                                        <Setter Property="Foreground" Value="black"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="LightSkyBlue"/>
                                        <Setter Property="Foreground" Value="black"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="DarkGray"/>
                                        <Setter Property="Foreground" Value="LightGray"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <ListBox x:Name="listTransit" Margin="10,68,0,35" ItemsSource="{Binding transits}" SelectionChanged="listTransit_SelectionChanged" SelectionMode="Single" HorizontalAlignment="Left" Width="130" MouseLeftButtonDown="ListLab_MouseLeftButtonDown" PreviewKeyDown="listTransit_PreviewKeyDown" >

                        <ListBox.Resources>
                            <ContextMenu x:Key="ItemContextMenu">
                                <MenuItem x:Name="ctx_transfer" Header="Transférer dans une autre semaine" Visibility="{Binding Path=DataContext.admin, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}}" FontSize="12" Foreground="Black" Click="ctx_transfer_Click"/>
                                <MenuItem x:Name="ctx_retraitTransit" Header="Enlever ce transit" FontSize="12" Foreground="Black" Click="ctx_retraitTransit_Click"/>
                            </ContextMenu>
                        </ListBox.Resources>

                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <CheckBox x:Name="chk_transit" IsEnabled="{Binding Path=DataContext.transCheck, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}}" IsChecked="{Binding ready, Mode=TwoWay}" IsHitTestVisible="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType=ListBoxItem}}" Checked="chk_transit_Checked" Unchecked="chk_transit_Unchecked"/>

                                    <TextBlock Text="{Binding transit}">
                                        <TextBlock.Style>
                                            <Style>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=DataContext.settings.DarkMode, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}}" Value="true">
                                                        <Setter Property="ItemsControl.Foreground" Value="LightGray"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ready}" Value="true">
                                                        <Setter Property="ItemsControl.Foreground" Value="Green"/>
                                                        <Setter Property="ItemsControl.FontWeight" Value="SemiBold"/>
                                                    </DataTrigger>

                                                    <DataTrigger Binding="{Binding selected}" Value="true">
                                                        <Setter Property="ItemsControl.Foreground" Value="DarkOrange"/>
                                                        <Setter Property="ItemsControl.FontWeight" Value="SemiBold"/>
                                                    </DataTrigger>

                                                    <DataTrigger Binding="{Binding self}" Value="true">
                                                        <Setter Property="ItemsControl.Foreground" Value="SteelBlue"/>
                                                        <Setter Property="ItemsControl.FontWeight" Value="SemiBold"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>

                                </StackPanel>

                            </DataTemplate>
                        </ListBox.ItemTemplate>

                        <ListBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="ItemsControl.Background" Value="#FF323232"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.Style>

                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}"/>
                            </Style>

                        </ListBox.ItemContainerStyle>

                    </ListBox>

                    <ListView x:Name="transitView" Foreground="Black" FontWeight="Bold" FontSize="13" ScrollViewer.VerticalScrollBarVisibility="Disabled" ScrollViewer.HorizontalScrollBarVisibility="Disabled" VirtualizingPanel.VirtualizationMode="Recycling" ItemsSource="{Binding transitSelected}" VirtualizingPanel.ScrollUnit="Pixel"  Margin="1,24,0,0" SelectionMode="Extended"  MouseLeftButtonDown="ListLab_MouseLeftButtonDown" Height="48" VerticalAlignment="Top" HorizontalAlignment="Left" Width="475" Grid.ColumnSpan="4" Grid.Column="1" >

                        <ListView.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="ItemsControl.Background" Value="#FFECECEC"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.Style>

                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            </Style>
                        </ListView.ItemContainerStyle>

                        <ListView.Resources>


                            <Style TargetType="{x:Type GridViewColumnHeader}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                                            <Border BorderThickness="0,0,0,1" BorderBrush="LightGray" Background="LightSteelBlue">
                                                <TextBlock x:Name="ContentHeader" Text="{TemplateBinding Content}" Padding="5,5,5,0" Width="{TemplateBinding Width}"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                <Setter Property="Foreground" Value="Black" />
                                <Setter Property="FontFamily" Value="Segoe UI" />
                                <Setter Property="FontSize" Value="12" />
                            </Style>

                        </ListView.Resources>

                        <ListView.View>

                            <GridView AllowsColumnReorder="False">

                                <GridViewColumn Header=" Mini ">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding mini, Mode=TwoWay}" Foreground="{Binding Path=DataContext.colorMini, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" TextAlignment="Center"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>

                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" SFF ">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding sff, Mode=TwoWay}" Foreground="{Binding Path=DataContext.colorSFF, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" TextAlignment="Center"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>

                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Portable ">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding laptop, Mode=TwoWay}" Foreground="{Binding Path=DataContext.colorLap, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" TextAlignment="Center"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>

                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Moniteur 22 ">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding lcd22, Mode=TwoWay}" Foreground="{Binding Path=DataContext.colorLCD22, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" TextAlignment="Center"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>

                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Moniteur 27 ">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding lcd27, Mode=TwoWay}" Foreground="{Binding Path=DataContext.colorLCD27, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" TextAlignment="Center"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>

                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Clavier NIP ">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding nip, Mode=TwoWay}" Foreground="{Binding Path=DataContext.colorNIP, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" TextAlignment="Center"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>

                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Imp à Reçu ">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding recu, Mode=TwoWay}" Foreground="{Binding Path=DataContext.colorRecu, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" TextAlignment="Center"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>

                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                            </GridView>
                        </ListView.View>
                    </ListView>

                    <TextBlock x:Name="tblock_transit" Height="19" VerticalAlignment="Top" Margin="2,76,0,0" HorizontalAlignment="Left" Width="155" Grid.Column="1">
                        <TextBlock.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <ListView x:Name="transitViewAccess" ScrollViewer.VerticalScrollBarVisibility="Disabled" ScrollViewer.HorizontalScrollBarVisibility="Disabled" VirtualizingPanel.VirtualizationMode="Recycling" ItemsSource="{Binding transitSelected}" VirtualizingPanel.ScrollUnit="Pixel"  Margin="1,98,0,0" SelectionMode="Extended"  MouseLeftButtonDown="ListLab_MouseLeftButtonDown" Height="48" VerticalAlignment="Top" HorizontalAlignment="Left" Width="739" Grid.ColumnSpan="6" Grid.Column="1" >

                        <ListView.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="ItemsControl.Background" Value="#FFECECEC"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.Style>

                        <ListView.Resources>

                            <Style TargetType="{x:Type GridViewColumnHeader}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                                            <Border BorderThickness="0,0,0,1" BorderBrush="LightGray" Background="LightSteelBlue">
                                                <TextBlock x:Name="ContentHeader" Text="{TemplateBinding Content}" Padding="5,5,5,0" Width="{TemplateBinding Width}" TextAlignment="Center" />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                <Setter Property="Foreground" Value="Black" />
                                <Setter Property="FontFamily" Value="Segoe UI" />
                                <Setter Property="FontSize" Value="12" />
                            </Style>

                        </ListView.Resources>

                        <ListView.View>
                            <GridView AllowsColumnReorder="False">

                                <GridViewColumn Header=" Clavier ">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox x:Name="chk_clavier" IsEnabled="{Binding Path=DataContext.accesCheck, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" Content="{Binding clavier}" IsChecked="{Binding clavierCheck, Mode=TwoWay}" Checked="chk_clavier_Checked" Unchecked="chk_clavier_Unchecked"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>

                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Souris sans fil ">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox x:Name="chk_sourisSansFil" IsEnabled="{Binding Path=DataContext.accesCheck, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" Content="{Binding sourisSansFil}" IsChecked="{Binding sourisSansFilCheck, Mode=TwoWay}" Checked="chk_sourisSansFil_Checked" Unchecked="chk_sourisSansFil_Unchecked"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>

                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Cable Sécurité ">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox x:Name="chk_cableSecure" Content="{Binding cableSecure}" IsEnabled="{Binding Path=DataContext.accesCheck, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" IsChecked="{Binding cableSecureCheck, Mode=TwoWay}" Checked="chk_cableSecure_Checked" Unchecked="chk_cableSecure_Unchecked"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>

                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Sac à dos ">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox x:Name="chk_sac" IsEnabled="{Binding Path=DataContext.accesCheck, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" Content="{Binding sac}" IsChecked="{Binding sacCheck, Mode=TwoWay}" Checked="chk_sac_Checked" Unchecked="chk_sac_Unchecked"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>

                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Sac à bandoulière ">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox x:Name="chk_sacBandou" IsEnabled="{Binding Path=DataContext.accesCheck, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" Content="{Binding sacBandou}" IsChecked="{Binding sacBandouCheck, Mode=TwoWay}" Checked="chk_sacBandou_Checked" Unchecked="chk_sacBandou_Unchecked"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>

                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Hub USB ">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox x:Name="chk_hubUsb" IsEnabled="{Binding Path=DataContext.accesCheck, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" Content="{Binding hubUsb}" IsChecked="{Binding hubUsbCheck, Mode=TwoWay}" Checked="chk_hubUsb_Checked" Unchecked="chk_hubUsb_Unchecked"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>

                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Cable USBC-DP ">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox x:Name="chk_usbcDP" IsEnabled="{Binding Path=DataContext.accesCheck, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" Content="{Binding usbcDP}" IsChecked="{Binding usbcDPCheck, Mode=TwoWay}" Checked="chk_usbcDP_Checked" Unchecked="chk_usbcDP_Unchecked"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>

                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Cable imp à livret ">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox x:Name="chk_livret" IsEnabled="{Binding Path=DataContext.accesCheck, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" Content="{Binding livret}" IsChecked="{Binding livretCheck, Mode=TwoWay}" Checked="chk_livret_Checked" Unchecked="chk_livret_Unchecked"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>

                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                            </GridView>
                        </ListView.View>

                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Style.Setters>
                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                    <Setter Property="Foreground" Value="black"/>
                                    <Setter Property="FontWeight" Value="Normal"/>
                                    <Setter Property="FontSize" Value="12"/>
                                </Style.Setters>
                            </Style>
                        </ListView.ItemContainerStyle>

                    </ListView>

                    <TextBlock Text="Mini :" Margin="3,158,0,0" Height="19" VerticalAlignment="Top" Grid.Column="1" HorizontalAlignment="Left" Width="33">
                        <TextBlock.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <Label x:Name="count_mini" Margin="37,150,0,0" FontSize="14" HorizontalContentAlignment="Left" VerticalAlignment="Top" HorizontalAlignment="Left" Grid.Column="1">
                        <Label.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>

                    <ListBox x:Name="listMini" Margin="2,177,1,35" SelectionMode="Extended" MouseLeftButtonDown="ListLab_MouseLeftButtonDown" Grid.Column="1" >

                        <ListBox.Resources>
                            <ContextMenu x:Key="ItemContextMenu">
                                <MenuItem x:Name="ctx_mini" Header="Enlever de la liste" IsEnabled="{Binding Path=DataContext.enableCTX, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}}" FontSize="12" Foreground="Black" Click="ctx_mini_Click"/>
                            </ContextMenu>
                        </ListBox.Resources>

                        <ListBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="ItemsControl.Background" Value="#FF323232"/>
                                        <Setter Property="TextBlock.Foreground" Value="White"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.Style>

                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}"/>
                            </Style>
                        </ListBox.ItemContainerStyle>

                    </ListBox>

                    <Button x:Name="btn_mini" Content="Mini" Margin="0,0,0,10" IsEnabled="False" HorizontalAlignment="Center" Width="66" Click="btn_mini_Click" Grid.Column="1" Height="20" VerticalAlignment="Bottom">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}" CornerRadius="10">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="LightBlue"/>
                                        <Setter Property="Foreground" Value="black"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="LightSkyBlue"/>
                                        <Setter Property="Foreground" Value="black"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="DarkGray"/>
                                        <Setter Property="Foreground" Value="LightGray"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <TextBlock Text="SFF :"  Height="19" VerticalAlignment="Top"  Grid.Column="2" Margin="4,158,0,0" HorizontalAlignment="Left" Width="29">
                        <TextBlock.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <Label x:Name="count_sff" Margin="33,150,0,0" FontSize="14" HorizontalContentAlignment="Left" VerticalAlignment="Top" HorizontalAlignment="Left" Grid.Column="2">
                        <Label.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>

                    <ListBox x:Name="listSFF" SelectionMode="Extended" MouseLeftButtonDown="ListLab_MouseLeftButtonDown" Grid.Column="2" Margin="2,177,1,35" >

                        <ListBox.Resources>
                            <ContextMenu x:Key="ItemContextMenu">
                                <MenuItem x:Name="ctx_sff2" Header="Enlever de la liste" IsEnabled="{Binding Path=DataContext.enableCTX, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}}" FontSize="12" Foreground="Black" Click="ctx_sff2_Click"/>
                            </ContextMenu>
                        </ListBox.Resources>

                        <ListBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="ItemsControl.Background" Value="#FF323232"/>
                                        <Setter Property="TextBlock.Foreground" Value="White"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.Style>

                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}"/>
                            </Style>
                        </ListBox.ItemContainerStyle>

                    </ListBox>

                    <Button x:Name="btn_sff" Content="SFF" Margin="0,0,0,10" IsEnabled="False" HorizontalAlignment="Center" Width="66" Click="btn_sff_Click" Grid.Column="2" Height="20" VerticalAlignment="Bottom">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}" CornerRadius="10">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="LightBlue"/>
                                        <Setter Property="Foreground" Value="black"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="LightSkyBlue"/>
                                        <Setter Property="Foreground" Value="black"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="DarkGray"/>
                                        <Setter Property="Foreground" Value="LightGray"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <TextBlock Text="Portable :" Margin="4,158,0,0" Height="19" VerticalAlignment="Top" Grid.Column="3" HorizontalAlignment="Left" Width="54">
                        <TextBlock.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <Label x:Name="count_laptop" Margin="59,150,0,0" FontSize="14" HorizontalContentAlignment="Left" VerticalAlignment="Top" HorizontalAlignment="Left" Grid.Column="3">
                        <Label.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>

                    <ListBox x:Name="listLaptop"  SelectionMode="Extended" MouseLeftButtonDown="ListLab_MouseLeftButtonDown" Grid.Column="3" Margin="2,177,1,35" >

                        <ListBox.Resources>
                            <ContextMenu x:Key="ItemContextMenu">
                                <MenuItem x:Name="ctx_laptop" Header="Enlever de la liste" IsEnabled="{Binding Path=DataContext.enableCTX, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}}" FontSize="12" Foreground="Black" Click="ctx_laptop_Click"/>
                            </ContextMenu>
                        </ListBox.Resources>

                        <ListBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="ItemsControl.Background" Value="#FF323232"/>
                                        <Setter Property="TextBlock.Foreground" Value="White"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.Style>

                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}"/>
                            </Style>
                        </ListBox.ItemContainerStyle>

                    </ListBox>

                    <Button x:Name="btn_lap" Content="Portable" Margin="0,0,0,10" IsEnabled="False" Click="btn_lap_Click" HorizontalAlignment="Center" Width="86" Grid.Column="3" Height="20" VerticalAlignment="Bottom">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}" CornerRadius="10">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="LightBlue"/>
                                        <Setter Property="Foreground" Value="black"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="LightSkyBlue"/>
                                        <Setter Property="Foreground" Value="black"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="DarkGray"/>
                                        <Setter Property="Foreground" Value="LightGray"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <TextBlock Text="Moniteur 22 :" Margin="2,158,0,0" Height="19" VerticalAlignment="Top" Grid.Column="4" HorizontalAlignment="Left" Width="76">
                        <TextBlock.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <Label x:Name="count_lcd22" Margin="78,150,0,0" FontSize="14" HorizontalContentAlignment="left" VerticalAlignment="Top" HorizontalAlignment="Left" Grid.Column="4">
                        <Label.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>

                    <ListBox x:Name="listLCD22" SelectionMode="Extended" MouseLeftButtonDown="ListLab_MouseLeftButtonDown" Grid.Column="4" Margin="2,177,1,35"  >

                        <ListBox.Resources>
                            <ContextMenu x:Key="ItemContextMenu">
                                <MenuItem x:Name="ctx_lcd22" Header="Enlever de la liste" IsEnabled="{Binding Path=DataContext.enableCTX, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}}" FontSize="12" Foreground="Black" Click="ctx_lcd22_Click"/>
                            </ContextMenu>
                        </ListBox.Resources>

                        <ListBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="ItemsControl.Background" Value="#FF323232"/>
                                        <Setter Property="TextBlock.Foreground" Value="White"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.Style>

                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}"/>
                            </Style>
                        </ListBox.ItemContainerStyle>

                    </ListBox>

                    <Button x:Name="btn_lcd22" Content="Moniteur 22" Margin="0,0,0,10" IsEnabled="False" HorizontalAlignment="Center" Width="110" Click="btn_lcd22_Click" Grid.Column="4" Height="20" VerticalAlignment="Bottom">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}" CornerRadius="10">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="LightBlue"/>
                                        <Setter Property="Foreground" Value="black"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="LightSkyBlue"/>
                                        <Setter Property="Foreground" Value="black"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="DarkGray"/>
                                        <Setter Property="Foreground" Value="LightGray"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <TextBlock Text="Moniteur 27 :" Margin="4,158,0,0" Height="19" VerticalAlignment="Top" Grid.Column="5" HorizontalAlignment="Left" Width="74">
                        <TextBlock.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <Label x:Name="count_lcd27" Margin="80,150,0,0" FontSize="14" HorizontalContentAlignment="Left" VerticalAlignment="Top" HorizontalAlignment="Left" Grid.Column="5">
                        <Label.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>

                    <ListBox x:Name="listLCD27" SelectionMode="Extended" MouseLeftButtonDown="ListLab_MouseLeftButtonDown"  Grid.Column="5" Margin="2,177,1,35"   >

                        <ListBox.Resources>
                            <ContextMenu x:Key="ItemContextMenu">
                                <MenuItem x:Name="ctx_lcd27" Header="Enlever de la liste" IsEnabled="{Binding Path=DataContext.enableCTX, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}}" FontSize="12" Foreground="Black" Click="ctx_lcd27_Click"/>
                            </ContextMenu>
                        </ListBox.Resources>

                        <ListBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="ItemsControl.Background" Value="#FF323232"/>
                                        <Setter Property="TextBlock.Foreground" Value="White"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.Style>

                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}"/>
                            </Style>
                        </ListBox.ItemContainerStyle>

                    </ListBox>

                    <Button x:Name="btn_lcd27" Content="Moniteur 27" Margin="0,0,0,10" IsEnabled="False" HorizontalAlignment="Center" Width="110" Click="btn_lcd27_Click" Grid.Column="5" Height="20" VerticalAlignment="Bottom">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}" CornerRadius="10">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="LightBlue"/>
                                        <Setter Property="Foreground" Value="black"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="LightSkyBlue"/>
                                        <Setter Property="Foreground" Value="black"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="DarkGray"/>
                                        <Setter Property="Foreground" Value="LightGray"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <TextBlock Text="Clavier NIP :" Margin="4,158,0,0" Height="19" VerticalAlignment="Top" Grid.Column="6" HorizontalAlignment="Left" Width="69">
                        <TextBlock.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <Label x:Name="count_nip" Margin="73,150,0,0" FontSize="14" HorizontalContentAlignment="Left" VerticalAlignment="Top" HorizontalAlignment="Left" Grid.Column="6">
                        <Label.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>

                    <ListBox x:Name="listNIP" SelectionMode="Extended" MouseLeftButtonDown="ListLab_MouseLeftButtonDown" Grid.Column="6" Margin="2,177,1,35" >

                        <ListBox.Resources>
                            <ContextMenu x:Key="ItemContextMenu">
                                <MenuItem x:Name="ctx_nip" Header="Enlever de la liste" IsEnabled="{Binding Path=DataContext.enableCTX, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}}" FontSize="12" Foreground="Black" Click="ctx_nip_Click"/>
                            </ContextMenu>
                        </ListBox.Resources>

                        <ListBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="ItemsControl.Background" Value="#FF323232"/>
                                        <Setter Property="TextBlock.Foreground" Value="White"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.Style>

                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}"/>
                            </Style>
                        </ListBox.ItemContainerStyle>

                    </ListBox>

                    <Button x:Name="btn_nip" Content="Clavier NIP" Margin="0,0,0,10" IsEnabled="False" HorizontalAlignment="Center" Width="100" Click="btn_nip_Click" Grid.Column="6" Height="20" VerticalAlignment="Bottom">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}" CornerRadius="10">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="LightBlue"/>
                                        <Setter Property="Foreground" Value="black"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="LightSkyBlue"/>
                                        <Setter Property="Foreground" Value="black"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="DarkGray"/>
                                        <Setter Property="Foreground" Value="LightGray"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <TextBlock Text="Imp à Reçu :" Margin="4,158,0,0" Height="19" VerticalAlignment="Top" Grid.Column="7" HorizontalAlignment="Left" Width="69">
                        <TextBlock.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <Label x:Name="count_recu" Margin="74,150,0,0" FontSize="14" HorizontalContentAlignment="Left" VerticalAlignment="Top" HorizontalAlignment="Left" Grid.Column="7">
                        <Label.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>

                    <ListBox x:Name="listRecu" SelectionMode="Extended" MouseLeftButtonDown="ListLab_MouseLeftButtonDown" Grid.Column="7" Margin="2,177,10,35"  >

                        <ListBox.Resources>
                            <ContextMenu x:Key="ItemContextMenu">
                                <MenuItem x:Name="ctx_recu" Header="Enlever de la liste" IsEnabled="{Binding Path=DataContext.enableCTX, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}}" FontSize="12" Foreground="Black" Click="ctx_recu_Click"/>
                            </ContextMenu>
                        </ListBox.Resources>

                        <ListBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="ItemsControl.Background" Value="#FF323232"/>
                                        <Setter Property="TextBlock.Foreground" Value="White"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.Style>

                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}"/>
                            </Style>
                        </ListBox.ItemContainerStyle>

                    </ListBox>

                    <Button x:Name="btn_recu" Content="Imp à Reçu" Margin="0,0,0,10" IsEnabled="False" HorizontalAlignment="Center" Width="100" Click="btn_recu_Click" Grid.Column="7" Height="20" VerticalAlignment="Bottom">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}" CornerRadius="10">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="LightBlue"/>
                                        <Setter Property="Foreground" Value="black"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="LightSkyBlue"/>
                                        <Setter Property="Foreground" Value="black"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="DarkGray"/>
                                        <Setter Property="Foreground" Value="LightGray"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                </Grid>
            </TabItem>

            <TabItem x:Name="tabValid" FontSize="12" Width="125" Margin="4,1,-4,-1">

                <TabItem.Header>
                    <Grid >
                        <TextBlock TextAlignment="Center" Text="Validation Entrepot" FontFamily="Arial" FontSize="12" Height="18" Width="auto" Margin="0,2,0,-2" />
                    </Grid>
                </TabItem.Header>

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="318*"/>
                        <RowDefinition Height="84*"/>
                        <RowDefinition Height="221*"/>
                    </Grid.RowDefinitions>

                    <Button x:Name="btn_rapportValid" Content="Rapport" HorizontalAlignment="Left" Margin="195,0,0,10" Width="65" Height="20" VerticalAlignment="Bottom" Grid.Row="2" Click="btn_rapportValid_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}" CornerRadius="10">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="LightBlue"/>
                                        <Setter Property="Foreground" Value="black"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="LightSkyBlue"/>
                                        <Setter Property="Foreground" Value="black"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="DarkGray"/>
                                        <Setter Property="Foreground" Value="LightGray"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <CheckBox x:Name="chk_special" IsEnabled="True" Content="Recherche par modèle" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Checked="chk_special_Checked" Unchecked="chk_special_Unchecked">
                        <CheckBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </CheckBox.Style>
                    </CheckBox>

                    <TextBlock Text="Type :" Margin="165,31,0,0" Height="18" VerticalAlignment="Top" HorizontalAlignment="Left" Width="45">
                        <TextBlock.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <ComboBox x:Name="cb_specialType" ItemsSource="{Binding validTypes}" IsEnabled="False" Margin="165,49,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="125" SelectionChanged="cb_specialType_SelectionChanged"/>

                    <TextBlock Text="Modèle(s) à filtrer :" Margin="165,159,0,0" Height="18" VerticalAlignment="Top" HorizontalAlignment="Left" Width="109">
                        <TextBlock.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <TextBlock Text="Modèle :" Margin="165,80,0,0" Height="18" VerticalAlignment="Top" HorizontalAlignment="Left" Width="50">
                        <TextBlock.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <ComboBox x:Name="cb_specialModel" IsEnabled="False" Margin="165,98,0,0" ItemsSource="{Binding validModel}" VerticalAlignment="Top" HorizontalAlignment="Left" Width="125" SelectionChanged="cb_specialModel_SelectionChanged" />

                    <Button x:Name="btn_addValid" IsEnabled="False" Content="Ajouter" HorizontalAlignment="Left" Width="125" Margin="165,125,0,0" Height="19" VerticalAlignment="Top" Click="btn_addValid_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}" CornerRadius="10">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="LightBlue"/>
                                        <Setter Property="Foreground" Value="black"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="LightSkyBlue"/>
                                        <Setter Property="Foreground" Value="black"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="DarkGray"/>
                                        <Setter Property="Foreground" Value="LightGray"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <ListBox x:Name="listValid" Margin="165,177,0,7" SelectionMode="Single" ItemsSource="{Binding validList}" HorizontalAlignment="Left" Width="125" MouseLeftButtonDown="listModel_MouseLeftButtonDown" >

                        <ListBox.Resources>
                            <ContextMenu x:Key="ItemContextMenu">
                                <MenuItem x:Name="ctx_enleverModel" Header="Enlever ce modèle" FontSize="12" Foreground="Black" Click="ctx_enleverModel_Click"/>
                            </ContextMenu>
                        </ListBox.Resources>

                        <ListBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="ItemsControl.Background" Value="#FF323232"/>
                                        <Setter Property="TextBlock.Foreground" Value="White"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.Style>

                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}"/>
                            </Style>
                        </ListBox.ItemContainerStyle>

                    </ListBox>

                    <Button x:Name="btn_validClear" IsEnabled="False" Content="Effacer les modèles" HorizontalAlignment="Left" Width="125" Margin="165,1,0,0" Height="19" VerticalAlignment="Top" Click="btn_validClear_Click" Grid.Row="1">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}" CornerRadius="10">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="LightBlue"/>
                                        <Setter Property="Foreground" Value="black"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="LightSkyBlue"/>
                                        <Setter Property="Foreground" Value="black"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="DarkGray"/>
                                        <Setter Property="Foreground" Value="LightGray"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <TextBlock Text="Numéros de série :" Margin="10,31,0,0" Height="18" VerticalAlignment="Top" HorizontalAlignment="Left" Width="101">
                        <TextBlock.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <TextBox x:Name="tb_valid" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Margin="10,48,0,40" TextWrapping="NoWrap" AcceptsReturn="True" HorizontalAlignment="Left" Width="150" TextChanged="tb_valid_TextChanged" Grid.RowSpan="2">
                        <TextBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="ItemsControl.Background" Value="#FF323232"/>
                                        <Setter Property="TextBlock.Foreground" Value="White"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>

                    <Button x:Name="btn_Valid" IsEnabled="False" Content="Recherche" HorizontalAlignment="Left" Margin="10,0,0,7" VerticalAlignment="Bottom" Width="150" Height="28" Click="btn_Valid_Click" Grid.Row="1">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}" CornerRadius="14">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="LightBlue"/>
                                        <Setter Property="Foreground" Value="black"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="LightSkyBlue"/>
                                        <Setter Property="Foreground" Value="black"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="DarkGray"/>
                                        <Setter Property="Foreground" Value="LightGray"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <TextBlock Text="Pas dans l'inventaire :" Margin="10,13,0,0" Height="18" VerticalAlignment="Top" HorizontalAlignment="Left" Width="112" Grid.Row="2">
                        <TextBlock.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <Label x:Name="lbl_countValidPasTrouver"  Margin="128,9,0,0" VerticalAlignment="Top" HorizontalContentAlignment="Right" Height="24" HorizontalAlignment="Left" Width="32" Grid.Row="2">
                        <Label.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>

                    <ListBox x:Name="listErreur" Margin="10,31,0,10" SelectionMode="Extended" HorizontalAlignment="Left" Width="150" MouseLeftButtonDown="ListViewData_MouseLeftButtonDown" Grid.Row="2" >

                        <ListBox.Resources>
                            <ContextMenu x:Key="ItemContextMenu">
                                <MenuItem x:Name="copySNctx" Header="Copier numéro(s) de sériel" FontSize="12" Foreground="Black"/>
                            </ContextMenu>
                        </ListBox.Resources>

                        <ListBox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="ItemsControl.Background" Value="#FF323232"/>
                                        <Setter Property="TextBlock.Foreground" Value="White"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.Style>

                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}"/>
                            </Style>
                        </ListBox.ItemContainerStyle>

                    </ListBox>

                    <Label x:Name="lbl_countTrouver" HorizontalContentAlignment="Right" Margin="0,24,10,0" VerticalAlignment="Top" Height="24" HorizontalAlignment="Right" Width="68">
                        <Label.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>

                    <Label x:Name="lbl_countValid"  Margin="116,25,0,0" VerticalAlignment="Top" HorizontalContentAlignment="Right" Height="24" HorizontalAlignment="Left" Width="44">
                        <Label.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>

                    <TextBlock Text="Résultats :" Margin="295,31,0,0" Height="18" VerticalAlignment="Top" HorizontalAlignment="Left" Width="56">
                        <TextBlock.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <Button x:Name="btn_clearValid" Content="Effacer tous" Margin="0,5,10,0" Height="20" VerticalAlignment="Top" Click="btn_clearValid_Click" HorizontalAlignment="Right" Width="78">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}" CornerRadius="10">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="LightBlue"/>
                                        <Setter Property="Foreground" Value="black"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="LightSkyBlue"/>
                                        <Setter Property="Foreground" Value="black"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="DarkGray"/>
                                        <Setter Property="Foreground" Value="LightGray"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <ListView x:Name="ViewValidStock" GridViewColumnHeader.Click="GridViewColumnHeader_Click" VirtualizingPanel.VirtualizationMode="Recycling" VirtualizingPanel.ScrollUnit="Pixel" Margin="295,49,10,7" SelectionMode="Extended" MouseLeftButtonDown="ListViewData_MouseLeftButtonDown" KeyUp="ListViewData_KeyUp" >

                        <ListView.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="ItemsControl.Background" Value="#FFECECEC"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.Style>

                        <ListView.Resources>
                            <ContextMenu x:Key="ItemContextMenu">
                                <MenuItem x:Name="copyAllV" Header="Copier ligne(s) au complet" FontSize="12" Foreground="Black" Click="copyAllV_Click" />
                                <MenuItem x:Name="copyRFv" Header="Copier RF(s) de Sortie" FontSize="12" Foreground="Black" Click="copyRFv_Click"/>
                                <MenuItem x:Name="copyRFretourV" Header="Copier RF(s) de Retour" FontSize="12" Foreground="Black" Click="copyRFretourV_Click"/>
                                <MenuItem x:Name="copySNv" Header="Copier numéro(s) de série" FontSize="12" Foreground="Black" Click="copySNv_Click"/>
                            </ContextMenu>

                            <Style TargetType="{x:Type GridViewColumnHeader}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                                            <Border BorderThickness="0,0,0,1" BorderBrush="LightGray" Background="LightSteelBlue">
                                                <TextBlock x:Name="ContentHeader" Text="{TemplateBinding Content}" Padding="5,5,5,0" Width="{TemplateBinding Width}" TextAlignment="Center" />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                <Setter Property="Foreground" Value="Black" />
                                <Setter Property="FontFamily" Value="Segoe UI" />
                                <Setter Property="FontSize" Value="12" />
                            </Style>

                        </ListView.Resources>

                        <ListView.View>
                            <GridView x:Name="dataGridViewRegV" AllowsColumnReorder="False">

                                <GridViewColumn Header=" Type" DisplayMemberBinding="{Binding type}">
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Modèle" DisplayMemberBinding="{Binding model}">
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" # Actif" DisplayMemberBinding="{Binding asset}">
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Numéro de série" DisplayMemberBinding="{Binding serial}">
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Statut" DisplayMemberBinding="{Binding statut}">
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" RF de Sortie" DisplayMemberBinding="{Binding RF}">
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Date de Sortie" DisplayMemberBinding="{Binding dateSortie}" >
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" RF de Retour" DisplayMemberBinding="{Binding RFretour}">
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Date de Retour" DisplayMemberBinding="{Binding dateRetour}" >
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Emplacement" DisplayMemberBinding="{Binding emplacement}">
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Date d'ajout" DisplayMemberBinding="{Binding dateEntry}">
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Date d'envoie au Lab" DisplayMemberBinding="{Binding dateEntryLab}">
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Date Clonage" DisplayMemberBinding="{Binding dateClone}" >
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Expiration Clonage" DisplayMemberBinding="{Binding dateCloneValid}" >
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                            </GridView>
                        </ListView.View>

                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Style.Setters>
                                    <Setter Property="Foreground" Value="black"/>
                                    <Setter Property="FontWeight" Value="Normal"/>
                                    <Setter Property="FontSize" Value="12"/>
                                    <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}"/>
                                    <EventSetter Event="MouseDoubleClick" Handler="ListBoxItem_MouseDoubleClick"/>
                                </Style.Setters>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding xcolor}" Value="1">
                                        <Setter Property="Foreground" Value="DarkOrange"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding xcolor}" Value="2">
                                        <Setter Property="Foreground" Value="Red"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.ItemContainerStyle>

                    </ListView>

                    <Label x:Name="lbl_countPasTrouver" HorizontalContentAlignment="Right" Margin="0,3,10,0" VerticalAlignment="Top" Height="25" HorizontalAlignment="Right" Width="68" Grid.Row="1">
                        <Label.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>

                    <TextBlock Text="Modèles dans l'inventaire autre que les S/N de recherche (si 'Recherche par modèle' sélectionné) :" Margin="295,11,0,0" Height="18" VerticalAlignment="Top" HorizontalAlignment="Left" Width="523" Grid.Row="1">
                        <TextBlock.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <ListView x:Name="ViewValidSortie" IsEnabled="False" GridViewColumnHeader.Click="GridViewColumnHeader_Click" VirtualizingPanel.VirtualizationMode="Recycling" VirtualizingPanel.ScrollUnit="Pixel" Margin="295,28,10,10" SelectionMode="Extended" MouseLeftButtonDown="ListViewData_MouseLeftButtonDown" KeyUp="ListViewData_KeyUp" Grid.RowSpan="2" Grid.Row="1" >

                        <ListView.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding settings.DarkMode}" Value="true">
                                        <Setter Property="ItemsControl.Background" Value="#FFECECEC"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.Style>

                        <ListView.Resources>
                            <ContextMenu x:Key="ItemContextMenu">
                                <MenuItem x:Name="copyAllVs" Header="Copier ligne(s) au complet" FontSize="12" Foreground="Black" Click="copyAllVs_Click" />
                                <MenuItem x:Name="copyRFvs" Header="Copier RF(s) de Sortie" FontSize="12" Foreground="Black" Click="copyRFvs_Click"/>
                                <MenuItem x:Name="copyRFretourVs" Header="Copier RF(s) de Retour" FontSize="12" Foreground="Black" Click="copyRFretourVs_Click"/>
                                <MenuItem x:Name="copySNvs" Header="Copier numéro(s) de série" FontSize="12" Foreground="Black" Click="copySNvs_Click"/>
                            </ContextMenu>

                            <Style TargetType="{x:Type GridViewColumnHeader}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                                            <Border BorderThickness="0,0,0,1" BorderBrush="LightGray" Background="LightSteelBlue">
                                                <TextBlock x:Name="ContentHeader" Text="{TemplateBinding Content}" Padding="5,5,5,0" Width="{TemplateBinding Width}" TextAlignment="Center" />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                <Setter Property="Foreground" Value="Black" />
                                <Setter Property="FontFamily" Value="Segoe UI" />
                                <Setter Property="FontSize" Value="12" />
                            </Style>

                        </ListView.Resources>

                        <ListView.View>
                            <GridView x:Name="dataGridViewRegVs" AllowsColumnReorder="False">

                                <GridViewColumn Header=" Type" DisplayMemberBinding="{Binding type}">
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Modèle" DisplayMemberBinding="{Binding model}">
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" # Actif" DisplayMemberBinding="{Binding asset}">
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Numéro de série" DisplayMemberBinding="{Binding serial}">
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Statut" DisplayMemberBinding="{Binding statut}">
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" RF de Sortie" DisplayMemberBinding="{Binding RF}">
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Date de Sortie" DisplayMemberBinding="{Binding dateSortie}" >
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" RF de Retour" DisplayMemberBinding="{Binding RFretour}">
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Date de Retour" DisplayMemberBinding="{Binding dateRetour}" >
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Emplacement" DisplayMemberBinding="{Binding emplacement}">
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Date d'ajout" DisplayMemberBinding="{Binding dateEntry}">
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Date d'envoie au Lab" DisplayMemberBinding="{Binding dateEntryLab}">
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Date Clonage" DisplayMemberBinding="{Binding dateClone}" >
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Header=" Expiration Clonage" DisplayMemberBinding="{Binding dateCloneValid}" >
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Background" Value="LightSteelBlue"/>
                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                            </GridView>
                        </ListView.View>

                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Style.Setters>
                                    <Setter Property="Foreground" Value="black"/>
                                    <Setter Property="FontWeight" Value="Normal"/>
                                    <Setter Property="FontSize" Value="12"/>
                                    <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}"/>
                                    <EventSetter Event="MouseDoubleClick" Handler="ListBoxItem_MouseDoubleClick"/>
                                </Style.Setters>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding xcolor}" Value="1">
                                        <Setter Property="Foreground" Value="DarkOrange"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding xcolor}" Value="2">
                                        <Setter Property="Foreground" Value="Red"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.ItemContainerStyle>

                    </ListView>

                </Grid>
            </TabItem>

        </TabControl>




    </Grid>

    <Window.Resources>
        <Style TargetType="{x:Type Border}">
            <Setter Property="CornerRadius" Value="10"/>
        </Style>

        <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
        <Style TargetType="{x:Type GroupBox}">
            <Setter Property="BorderBrush" Value="#D5DFE5" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupBox}">
                        <Grid SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="6" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="6" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="6" />
                            </Grid.RowDefinitions>
                            <Border CornerRadius="4" Grid.Row="1" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="4" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent" Background="{TemplateBinding Background}" />
                            <Border Name="Header" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1">
                                <ContentPresenter ContentSource="Header" RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ContentPresenter Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Border Grid.Row="1" Grid.RowSpan="3" Grid.ColumnSpan="4"  BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="3">
                                <Border.OpacityMask>
                                    <MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">
                                        <Binding ElementName="Header" Path="ActualWidth" />
                                        <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                                        <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding>
                                </Border.OpacityMask>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <WindowChrome.WindowChrome>
        <WindowChrome GlassFrameThickness="0" CornerRadius="20" CaptionHeight="0" UseAeroCaptionButtons="False" ResizeBorderThickness="10"/>
    </WindowChrome.WindowChrome>

</Window>
